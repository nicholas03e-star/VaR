---
title: "Portfolio opt"
author: "Nicholas Bartolucci"
date: "`r Sys.Date()`"
output: pdf_document
---

Download packages
```{r}
library(quantmod)
library(PerformanceAnalytics)
library(quadprog)
```

Get Stock returns
```{r}
companies <- c("MELI","AMZN","GOOG","GOOGL","SPY","MSFT","AAPL","NVDA","UNH","V","COP","META","MNST","KO","TSLA","COST","BRK-B","PG","DIS", "XOM", "JPM","AXP","GLD","BTC")
getSymbols(companies, from = "2015-01-01", to = Sys.Date())
prices <- do.call(merge, lapply(companies, function(x) Ad(get(x))))
returns <- na.omit(ROC(prices, type = "discrete"))
head(returns)
```
mean/var
```{r}
mu <- colMeans(returns)
Sigma <- cov(returns)
```

optimise weights
```{r}
n <- ncol(returns)
Dmat <- 2 * Sigma
dvec <- rep(0, n)
Amat <- cbind(rep(1, n), mu, diag(1, n))
bvec <- c(1, mean(mu)*1.2, rep(0, n))
meq <- 2

opt <- solve.QP(Dmat, dvec, Amat, bvec, meq = meq)
weights <- round(opt$solution / sum(opt$solution), 4)
names(weights) <- colnames(returns)
weights
```
returns and sharpe
```{r}
port_return <- sum(weights * mu)
port_sd <- sqrt(t(weights) %*% Sigma %*% weights)
sharpe <- port_return / port_sd

cat("Expected Return:", port_return, "\n")
cat("Risk (Std Dev):", port_sd, "\n")
cat("Sharpe Ratio:", sharpe, "\n")
(1+ port_return)^365
annsharpe = sharpe*sqrt(252)
annsharpe
```
```{r}
n <- nrow(returns)
print(n)
```

rolling window
```{r}
n <- nrow(returns)
window <- 200     # length of training window
test_len <- 20    # number of days to hold portfolio before rebalancing
risk_free <- 0.0001  # daily risk-free rate

port_returns <- c()
dates <- c()

for (i in seq(window, n - test_len, by = test_len)) {
  
  train <- returns[(i - window + 1):i, ]
  test <- returns[(i + 1):(i + test_len), ]
  
  mu_train <- colMeans(train)
  Sigma_train <- cov(train)

  Dmat <- 2 * Sigma_train
  dvec <- rep(0, ncol(train))
  target <- mean(mu_train) * 1.2  # 20% higher than average return
Amat <- cbind(rep(1, ncol(train)), mu_train, diag(1, ncol(train)))
bvec <- c(1, target, rep(0, ncol(train)))
meq <- 2
  sol <- solve.QP(Dmat, dvec, Amat, bvec, meq)
  w_opt <- sol$solution / sum(sol$solution)

  port_ret <- as.numeric(test %*% w_opt)
  
  port_returns <- c(port_returns, port_ret)
dates <- c(dates, index(test))
}

port_returns <- xts::xts(port_returns, order.by = as.Date(dates))
cum_ret <- cumprod(1 + port_returns)
mean_ret <- mean(port_returns)
sd_ret <- sd(port_returns)
sharpe <- (mean_ret - risk_free) / sd_ret
cat("Expected Return:", mean_ret, "\n")
cat("Risk (Std Dev):", sd_ret, "\n")
cat("Sharpe Ratio:", sharpe, "\n")
annsharpe = sharpe*sqrt(252)
annsharpe
```
visuals
```{r}
library(ggplot2)
library(PerformanceAnalytics)

# Assume you already have port_returns (daily returns)
cum_returns <- cumprod(1 + port_returns) - 1
dates <- index(port_returns)

plot_data <- data.frame(Date = dates, CumulativeReturn = cum_returns)

ggplot(plot_data, aes(x = Date, y = CumulativeReturn)) +
  geom_line(color = "#0072B2", linewidth = 1) +
  labs(
    title = "Cumulative Portfolio Return Over Time",
    x = "Date",
    y = "Cumulative Return"
  ) +
  theme_minimal(base_size = 13)

```
```{r}
library(zoo)
library(PerformanceAnalytics)

# Compute rolling Sharpe (e.g. 60-day window)
rolling_sharpe <- rollapply(port_returns, width = 60,
                            FUN = function(x) mean(x) / sd(x),
                            by = 1, align = "right", fill = NA)
plot_data2 <- na.omit(data.frame(Date = dates, RollingSharpe = rolling_sharpe))

ggplot(plot_data2, aes(x = Date, y = RollingSharpe)) +
  geom_line(color = "#009E73", linewidth = 1) +
  labs(
    title = "Rolling 60-Day Sharpe Ratio",
    x = "Date",
    y = "Sharpe Ratio"
  ) +
  theme_minimal(base_size = 13)

```






